#include <iostream>

struct Student
{
	int id;
	char name[100];
	float score;
};
int main()
{
	//--------------------------------------------
	// 5. 구조체
	//--------------------------------------------

	// ## 구조체란?
	// 
	// 기본자료형
	// int, float, bool, char, 포인터

	// 사용자 정의 자료형
	// enum(정수형), + [구조체]
	

	// 객체 (C, C++)
	// C언어와 C++언어의 차이점
	// C : 절차지향언어
	//		코드는 위에서 아래로만 읽으면 된다.
	// 
	// C++ : 객체지향언어
	//		코드는 객체단위로 읽으면 된다.

	// 객체가 뭐길래??? (Object)
	// 객체는 프로그래밍할때, 코드에서 존재하는 모든것 
	// 데이터와 그 데이터를 조작하는 함수를 하나로 묶는 프로그램의 구성 단위

	// 빙고판 객체
	//   - 마킹한다.
	//   - 셔플한다
	//   - 빙고갯수를 체크한다.
	//   - 빙고판을 그린다.

	// 게임매니저 객체
	//   - 유저턴에서 유저가 마킹할 번호를 부른다
	//   - 컴퓨터턴에서 컴퓨터가 마킹할 번호를 부른다.
	//   - 게임 승패에 따라 UI를 출력한다.


	// 구조체는
	// 여러 타입의 변수들을 하나로 묶는 사용자 정의 자료형
	// 데이터 그룹화 할때 쓰입니다. (객체 모델링 C++ 기준..)
	
	// C언어에서는 
	//struct Student student = { 1, 80 };
	struct Student student = {};
	student.id = 1;
	strcpy_s(student.name, "백수영");
	student.score = 80.5;

	//C++에서는 struct 키워드 생략가능
	Student student2 = {};
	student2.id = 1;
	strcpy_s(student2.name, "백수영");
	student2.score = 80.5;


	//오늘 배운거 확실히 기억할것 :  함수 , 구조체 
	// - 서브로는 포인터, 다차원배열


	// 구조체도 배열로 쓸수있다.
	Student student3[10] = {};

	// 숙제
	// 직업군 3개(전사, 마법사, 궁사)중에 하나를 선택하고
	// 직업별로 스탯이 다르다.
	// Hp, Atk, Def, criticalPercent

	// 몬스터 1마리와 싸운다.
	// 몬스터 프리셋은 3종류 (이중에 랜덤으로 하나)
	// Name, Hp, Atk, Def

	// 캐릭터가 한대때리고,
	// 몬스터가 한대때리고
	// 반복
	// 누가 HP 몇남기고 이겼는지 출력

	// defense는 
	// 방어율 : defense / (100 + defense)
	// defense 100기준 50% (데미지의 50만 들어옴)

	// - 주말 숙제
	//  1. 가위바위보
	//  2. 가위바위보 하나빼기
	//  3. 숫자야구 (3자리 버전, 4자리 버전)

	// 6507 (컴퓨터가 안겹치는 4자리수를 숨겨둠)
	// 유저가 안겹치는 4자리수를 불러본다
	// 3457
	// 자릿수와 값이 동일하면 strike, 값이 같은건있는데 자릿수가 다르면 ball
	// 1strike, 1ball 표현
	// 9번 반복해서
	// 4strike가 나오면 유저승리
	// 9번 동안 4strike가 안나오면 컴퓨터승리


	return 0;
}